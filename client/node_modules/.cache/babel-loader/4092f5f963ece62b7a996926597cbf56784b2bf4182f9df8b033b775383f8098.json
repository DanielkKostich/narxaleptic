{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\bootcamp\\\\narxaleptic\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Gallery from './components/Gallery';\nimport Contact from './components/Contact';\nimport SignupPage from './components/SignupPage';\nimport Loginpage from './components/Loginpage';\nimport NavBar from './components/NavBar';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https:localhost/',\n  // Replace with your Apollo Server URL\n  cache: new InMemoryCache()\n});\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('Home');\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          currentPage: currentPage,\n          handlePageChange: handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/gallery\",\n            component: Gallery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact\",\n            component: Contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signuppage\",\n            component: SignupPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/loginpage\",\n            component: Loginpage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vcoaMTDHSZfl5rAUZU9BPC9/EwA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Home","About","Gallery","Contact","SignupPage","Loginpage","NavBar","ApolloClient","InMemoryCache","ApolloProvider","jsxDEV","_jsxDEV","client","uri","cache","App","_s","currentPage","setCurrentPage","handlePageChange","page","children","className","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","component","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/bootcamp/narxaleptic/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Gallery from './components/Gallery';\r\nimport Contact from './components/Contact';\r\nimport SignupPage from './components/SignupPage';\r\nimport Loginpage from './components/Loginpage';\r\nimport NavBar from './components/NavBar';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https:localhost/', // Replace with your Apollo Server URL\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState('Home');\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n    <Router>\r\n      <div className=\"App\">\r\n        <NavBar currentPage={currentPage} handlePageChange={handlePageChange} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/about\"  component={About} />\r\n          <Route path=\"/gallery\" component={Gallery} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Route path=\"/signuppage\" component={SignupPage} />\r\n          <Route path=\"/loginpage\" component={Loginpage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n</ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}